// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: mK29vbUA9fixHjEEyxwZmc
// Component: fX3f5NBqW6b
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button2 from "../../Button2"; // plasmic-import: uNxOdfDSUZd/component

import { useScreenVariants as useScreenVariantsnjp8KcyzPlhC } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: njp8kcyzPlhC/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: mK29vbUA9fixHjEEyxwZmc/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: fX3f5NBqW6b/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: coS_FoT7Bsr/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: uI88U0ue5ue/icon
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: 1AHADxd7q/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: MVdQjwcDza/icon
import Vector3Icon from "./icons/PlasmicIcon__Vector3"; // plasmic-import: P9qgIN4m8r/icon
import imageYYmxnDaPx6Ob from "./images/image.svg"; // plasmic-import: YYmxnDaPx6OB/picture
import group00Waua0FKr from "./images/group.svg"; // plasmic-import: 00waua0fKR/picture
import group2Os0S8Rs4AD from "./images/group2.svg"; // plasmic-import: Os0S8Rs4aD/picture
import group3S0AlWsUGzF from "./images/group3.svg"; // plasmic-import: s0AlWsUGzF/picture
import group4B6Z8Wi4MNr from "./images/group4.svg"; // plasmic-import: B6z8Wi4MNr/picture
import group5Qae0UeWhQn from "./images/group5.svg"; // plasmic-import: QAE0ueWhQN/picture

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  button?: p.Flex<"button">;
  features12?: p.Flex<"div">;
  features12Background?: p.Flex<"div">;
  sectionHeading?: p.Flex<"div">;
  sectionTitle?: p.Flex<"div">;
  description?: p.Flex<"div">;
  container?: p.Flex<"div">;
  row01?: p.Flex<"div">;
  featureItem?: p.Flex<"div">;
  featureItemBackground?: p.Flex<"div">;
  baseFeatureIcon?: p.Flex<"div">;
  content?: p.Flex<"div">;
  headline?: p.Flex<"div">;
  description2?: p.Flex<"div">;
  featureItem2?: p.Flex<"div">;
  featureItemBackground2?: p.Flex<"div">;
  baseFeatureIcon2?: p.Flex<"div">;
  baseFeatureIconBackgroundMask?: p.Flex<"div">;
  content2?: p.Flex<"div">;
  headline2?: p.Flex<"div">;
  description3?: p.Flex<"div">;
  featureItem3?: p.Flex<"div">;
  featureItemBackground3?: p.Flex<"div">;
  baseFeatureIcon3?: p.Flex<"div">;
  baseFeatureIconBackgroundMask2?: p.Flex<"div">;
  content3?: p.Flex<"div">;
  headline3?: p.Flex<"div">;
  description4?: p.Flex<"div">;
  row02?: p.Flex<"div">;
  featureItem4?: p.Flex<"div">;
  featureItemBackground4?: p.Flex<"div">;
  baseFeatureIcon4?: p.Flex<"div">;
  baseFeatureIconBackgroundMask3?: p.Flex<"div">;
  content4?: p.Flex<"div">;
  headline4?: p.Flex<"div">;
  description5?: p.Flex<"div">;
  featureItem5?: p.Flex<"div">;
  featureItemBackground5?: p.Flex<"div">;
  baseFeatureIcon5?: p.Flex<"div">;
  baseFeatureIconBackgroundMask4?: p.Flex<"div">;
  content5?: p.Flex<"div">;
  headline5?: p.Flex<"div">;
  description6?: p.Flex<"div">;
  featureItem6?: p.Flex<"div">;
  featureItemBackground6?: p.Flex<"div">;
  baseFeatureIcon6?: p.Flex<"div">;
  baseFeatureIconBackgroundMask5?: p.Flex<"div">;
  content6?: p.Flex<"div">;
  headline6?: p.Flex<"div">;
  description7?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnjp8KcyzPlhC()
  });

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__jXmxr)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__csSgF)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__x2G6W)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rmUrM)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"40px" as const}
                  src={{
                    src: imageYYmxnDaPx6Ob,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__b6Vt5)}
                >
                  <Button2
                    className={classNames("__wab_instance", sty.button2__upxCr)}
                    color={"clear" as const}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__raRg1)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg___926Re)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q5Gmt
                      )}
                    >
                      {"Services"}
                    </div>
                  </Button2>

                  <Button2
                    className={classNames("__wab_instance", sty.button2__h43S8)}
                    color={"clear" as const}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__bGgqL)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__hc94C)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ceBkb
                      )}
                    >
                      {"Features"}
                    </div>
                  </Button2>

                  <Button2
                    className={classNames("__wab_instance", sty.button2__uIuyJ)}
                    color={"clear" as const}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__kHj7W)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__sivKd)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0X0Fn
                      )}
                    >
                      {"Company"}
                    </div>
                  </Button2>

                  <Button2
                    className={classNames("__wab_instance", sty.button2__aqETw)}
                    color={"clear" as const}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__qNcfk)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__ob9A)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ad3TX
                      )}
                    >
                      {"Contact"}
                    </div>
                  </Button2>

                  <Button2
                    className={classNames("__wab_instance", sty.button2__quMCb)}
                    color={"clear" as const}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__caOat)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__optaF)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0R5Wj
                      )}
                    >
                      {"Log in"}
                    </div>
                  </Button2>

                  <Button2
                    className={classNames("__wab_instance", sty.button2__y9FXm)}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__fYwVl)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__yGtHr)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__emAov
                      )}
                    >
                      {"Sign up"}
                    </div>
                  </Button2>
                </p.Stack>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xWxCu)}
                  >
                    {false ? (
                      <button
                        data-plasmic-name={"button"}
                        data-plasmic-override={overrides.button}
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          projectcss.__wab_text,
                          sty.button
                        )}
                      >
                        {"Sign up"}
                      </button>
                    ) : null}
                    {true ? (
                      <Button2
                        className={classNames(
                          "__wab_instance",
                          sty.button2__pBzLc
                        )}
                        color={"clear" as const}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yr3R
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <ChecksvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pGRvY
                            )}
                            role={"img"}
                          />
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__prych
                          )}
                        >
                          {"Log in"}
                        </div>
                      </Button2>
                    ) : null}
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__kse0X)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6Vg7A)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__s8HZu)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__vqO93)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__y7KWz
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {"Designs that inspire "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {"and"}
                        </span>
                        <React.Fragment>{" communicate"}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xaLn5
                      )}
                    >
                      {
                        "Maecenas hendrerit dolor orci diam odio quam vestibulum suspendisse accumsan a facilisi arcu eu integer bibendum ridiculus feugiat a non sed."
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___15YAt)}
                  >
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__x8XcU
                      )}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__r4DcS)}
                          role={"img"}
                        />
                      }
                      shape={"rounded" as const}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__e1Wj)}
                          role={"img"}
                        />
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iiHt
                        )}
                      >
                        {"Start now ->"}
                      </div>
                    </Button2>

                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__h7Ane
                      )}
                      color={"clear" as const}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__rZr3I)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg___81IB)}
                          role={"img"}
                        />
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ixyPg
                        )}
                      >
                        {"Learn more…"}
                      </div>
                    </Button2>
                  </p.Stack>
                </p.Stack>

                <div className={classNames(projectcss.all, sty.freeBox__jbGuU)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__j7OEf)}
                  />
                </div>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"features12"}
              data-plasmic-override={overrides.features12}
              className={classNames(projectcss.all, sty.features12)}
            >
              <div
                data-plasmic-name={"features12Background"}
                data-plasmic-override={overrides.features12Background}
                className={classNames(projectcss.all, sty.features12Background)}
              />

              <div
                data-plasmic-name={"sectionHeading"}
                data-plasmic-override={overrides.sectionHeading}
                className={classNames(projectcss.all, sty.sectionHeading)}
              >
                <div
                  data-plasmic-name={"sectionTitle"}
                  data-plasmic-override={overrides.sectionTitle}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionTitle
                  )}
                >
                  {"Tailor-made features"}
                </div>

                <div
                  data-plasmic-name={"description"}
                  data-plasmic-override={overrides.description}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.description
                  )}
                >
                  {
                    "Lorem ipsum is common placeholder text used to demonstrate the graphic elements of a document or visual presentation."
                  }
                </div>
              </div>

              <div
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                className={classNames(projectcss.all, sty.container)}
              >
                <div
                  data-plasmic-name={"row01"}
                  data-plasmic-override={overrides.row01}
                  className={classNames(projectcss.all, sty.row01)}
                >
                  <div
                    data-plasmic-name={"featureItem"}
                    data-plasmic-override={overrides.featureItem}
                    className={classNames(projectcss.all, sty.featureItem)}
                  >
                    <div
                      data-plasmic-name={"featureItemBackground"}
                      data-plasmic-override={overrides.featureItemBackground}
                      className={classNames(
                        projectcss.all,
                        sty.featureItemBackground
                      )}
                    />

                    <div
                      data-plasmic-name={"baseFeatureIcon"}
                      data-plasmic-override={overrides.baseFeatureIcon}
                      className={classNames(
                        projectcss.all,
                        sty.baseFeatureIcon
                      )}
                    >
                      <VectorIcon
                        className={classNames(projectcss.all, sty.svg__ckXv)}
                        role={"img"}
                      />

                      <Vector2Icon
                        className={classNames(projectcss.all, sty.svg__ecBZw)}
                        role={"img"}
                      />

                      <Vector3Icon
                        className={classNames(projectcss.all, sty.svg__cUOr2)}
                        role={"img"}
                      />
                    </div>

                    <div
                      data-plasmic-name={"content"}
                      data-plasmic-override={overrides.content}
                      className={classNames(projectcss.all, sty.content)}
                    >
                      <div
                        data-plasmic-name={"headline"}
                        data-plasmic-override={overrides.headline}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.headline
                        )}
                      >
                        {"Robust workflow"}
                      </div>

                      <div
                        data-plasmic-name={"description2"}
                        data-plasmic-override={overrides.description2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.description2
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed erat nibh tristique ipsum."
                        }
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"featureItem2"}
                    data-plasmic-override={overrides.featureItem2}
                    className={classNames(projectcss.all, sty.featureItem2)}
                  >
                    <div
                      data-plasmic-name={"featureItemBackground2"}
                      data-plasmic-override={overrides.featureItemBackground2}
                      className={classNames(
                        projectcss.all,
                        sty.featureItemBackground2
                      )}
                    />

                    <div
                      data-plasmic-name={"baseFeatureIcon2"}
                      data-plasmic-override={overrides.baseFeatureIcon2}
                      className={classNames(
                        projectcss.all,
                        sty.baseFeatureIcon2
                      )}
                    >
                      <div
                        data-plasmic-name={"baseFeatureIconBackgroundMask"}
                        data-plasmic-override={
                          overrides.baseFeatureIconBackgroundMask
                        }
                        className={classNames(
                          projectcss.all,
                          sty.baseFeatureIconBackgroundMask
                        )}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__nzDGa)}
                        displayHeight={"29.333px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"29.333px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: group00Waua0FKr,
                          fullWidth: 29.333,
                          fullHeight: 29.333,
                          aspectRatio: 1
                        }}
                      />
                    </div>

                    <div
                      data-plasmic-name={"content2"}
                      data-plasmic-override={overrides.content2}
                      className={classNames(projectcss.all, sty.content2)}
                    >
                      <div
                        data-plasmic-name={"headline2"}
                        data-plasmic-override={overrides.headline2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.headline2
                        )}
                      >
                        {"Flexibility"}
                      </div>

                      <div
                        data-plasmic-name={"description3"}
                        data-plasmic-override={overrides.description3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.description3
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed erat nibh tristique ipsum."
                        }
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"featureItem3"}
                    data-plasmic-override={overrides.featureItem3}
                    className={classNames(projectcss.all, sty.featureItem3)}
                  >
                    <div
                      data-plasmic-name={"featureItemBackground3"}
                      data-plasmic-override={overrides.featureItemBackground3}
                      className={classNames(
                        projectcss.all,
                        sty.featureItemBackground3
                      )}
                    />

                    <div
                      data-plasmic-name={"baseFeatureIcon3"}
                      data-plasmic-override={overrides.baseFeatureIcon3}
                      className={classNames(
                        projectcss.all,
                        sty.baseFeatureIcon3
                      )}
                    >
                      <div
                        data-plasmic-name={"baseFeatureIconBackgroundMask2"}
                        data-plasmic-override={
                          overrides.baseFeatureIconBackgroundMask2
                        }
                        className={classNames(
                          projectcss.all,
                          sty.baseFeatureIconBackgroundMask2
                        )}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__qWhTo)}
                        displayHeight={"29.333px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"29.333px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: group2Os0S8Rs4AD,
                          fullWidth: 29.333,
                          fullHeight: 29.333,
                          aspectRatio: 1
                        }}
                      />
                    </div>

                    <div
                      data-plasmic-name={"content3"}
                      data-plasmic-override={overrides.content3}
                      className={classNames(projectcss.all, sty.content3)}
                    >
                      <div
                        data-plasmic-name={"headline3"}
                        data-plasmic-override={overrides.headline3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.headline3
                        )}
                      >
                        {"User friendly"}
                      </div>

                      <div
                        data-plasmic-name={"description4"}
                        data-plasmic-override={overrides.description4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.description4
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed erat nibh tristique ipsum."
                        }
                      </div>
                    </div>
                  </div>
                </div>

                <div
                  data-plasmic-name={"row02"}
                  data-plasmic-override={overrides.row02}
                  className={classNames(projectcss.all, sty.row02)}
                >
                  <div
                    data-plasmic-name={"featureItem4"}
                    data-plasmic-override={overrides.featureItem4}
                    className={classNames(projectcss.all, sty.featureItem4)}
                  >
                    <div
                      data-plasmic-name={"featureItemBackground4"}
                      data-plasmic-override={overrides.featureItemBackground4}
                      className={classNames(
                        projectcss.all,
                        sty.featureItemBackground4
                      )}
                    />

                    <div
                      data-plasmic-name={"baseFeatureIcon4"}
                      data-plasmic-override={overrides.baseFeatureIcon4}
                      className={classNames(
                        projectcss.all,
                        sty.baseFeatureIcon4
                      )}
                    >
                      <div
                        data-plasmic-name={"baseFeatureIconBackgroundMask3"}
                        data-plasmic-override={
                          overrides.baseFeatureIconBackgroundMask3
                        }
                        className={classNames(
                          projectcss.all,
                          sty.baseFeatureIconBackgroundMask3
                        )}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__l1Xk)}
                        displayHeight={"32px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"26.666px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: group3S0AlWsUGzF,
                          fullWidth: 26.666,
                          fullHeight: 32,
                          aspectRatio: 0.84375
                        }}
                      />
                    </div>

                    <div
                      data-plasmic-name={"content4"}
                      data-plasmic-override={overrides.content4}
                      className={classNames(projectcss.all, sty.content4)}
                    >
                      <div
                        data-plasmic-name={"headline4"}
                        data-plasmic-override={overrides.headline4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.headline4
                        )}
                      >
                        {"Multiple layouts"}
                      </div>

                      <div
                        data-plasmic-name={"description5"}
                        data-plasmic-override={overrides.description5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.description5
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed erat nibh tristique ipsum."
                        }
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"featureItem5"}
                    data-plasmic-override={overrides.featureItem5}
                    className={classNames(projectcss.all, sty.featureItem5)}
                  >
                    <div
                      data-plasmic-name={"featureItemBackground5"}
                      data-plasmic-override={overrides.featureItemBackground5}
                      className={classNames(
                        projectcss.all,
                        sty.featureItemBackground5
                      )}
                    />

                    <div
                      data-plasmic-name={"baseFeatureIcon5"}
                      data-plasmic-override={overrides.baseFeatureIcon5}
                      className={classNames(
                        projectcss.all,
                        sty.baseFeatureIcon5
                      )}
                    >
                      <div
                        data-plasmic-name={"baseFeatureIconBackgroundMask4"}
                        data-plasmic-override={
                          overrides.baseFeatureIconBackgroundMask4
                        }
                        className={classNames(
                          projectcss.all,
                          sty.baseFeatureIconBackgroundMask4
                        )}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__c1HEt)}
                        displayHeight={"29.333px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"29.333px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: group4B6Z8Wi4MNr,
                          fullWidth: 29.333,
                          fullHeight: 29.333,
                          aspectRatio: 1
                        }}
                      />
                    </div>

                    <div
                      data-plasmic-name={"content5"}
                      data-plasmic-override={overrides.content5}
                      className={classNames(projectcss.all, sty.content5)}
                    >
                      <div
                        data-plasmic-name={"headline5"}
                        data-plasmic-override={overrides.headline5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.headline5
                        )}
                      >
                        {"Better components"}
                      </div>

                      <div
                        data-plasmic-name={"description6"}
                        data-plasmic-override={overrides.description6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.description6
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed erat nibh tristique ipsum."
                        }
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"featureItem6"}
                    data-plasmic-override={overrides.featureItem6}
                    className={classNames(projectcss.all, sty.featureItem6)}
                  >
                    <div
                      data-plasmic-name={"featureItemBackground6"}
                      data-plasmic-override={overrides.featureItemBackground6}
                      className={classNames(
                        projectcss.all,
                        sty.featureItemBackground6
                      )}
                    />

                    <div
                      data-plasmic-name={"baseFeatureIcon6"}
                      data-plasmic-override={overrides.baseFeatureIcon6}
                      className={classNames(
                        projectcss.all,
                        sty.baseFeatureIcon6
                      )}
                    >
                      <div
                        data-plasmic-name={"baseFeatureIconBackgroundMask5"}
                        data-plasmic-override={
                          overrides.baseFeatureIconBackgroundMask5
                        }
                        className={classNames(
                          projectcss.all,
                          sty.baseFeatureIconBackgroundMask5
                        )}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__fatlV)}
                        displayHeight={"31.999px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"31.091px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: group5Qae0UeWhQn,
                          fullWidth: 31.091,
                          fullHeight: 31.999,
                          aspectRatio: 1
                        }}
                      />
                    </div>

                    <div
                      data-plasmic-name={"content6"}
                      data-plasmic-override={overrides.content6}
                      className={classNames(projectcss.all, sty.content6)}
                    >
                      <div
                        data-plasmic-name={"headline6"}
                        data-plasmic-override={overrides.headline6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.headline6
                        )}
                      >
                        {"Well organised"}
                      </div>

                      <div
                        data-plasmic-name={"description7"}
                        data-plasmic-override={overrides.description7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.description7
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed erat nibh tristique ipsum."
                        }
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "button",
    "features12",
    "features12Background",
    "sectionHeading",
    "sectionTitle",
    "description",
    "container",
    "row01",
    "featureItem",
    "featureItemBackground",
    "baseFeatureIcon",
    "content",
    "headline",
    "description2",
    "featureItem2",
    "featureItemBackground2",
    "baseFeatureIcon2",
    "baseFeatureIconBackgroundMask",
    "content2",
    "headline2",
    "description3",
    "featureItem3",
    "featureItemBackground3",
    "baseFeatureIcon3",
    "baseFeatureIconBackgroundMask2",
    "content3",
    "headline3",
    "description4",
    "row02",
    "featureItem4",
    "featureItemBackground4",
    "baseFeatureIcon4",
    "baseFeatureIconBackgroundMask3",
    "content4",
    "headline4",
    "description5",
    "featureItem5",
    "featureItemBackground5",
    "baseFeatureIcon5",
    "baseFeatureIconBackgroundMask4",
    "content5",
    "headline5",
    "description6",
    "featureItem6",
    "featureItemBackground6",
    "baseFeatureIcon6",
    "baseFeatureIconBackgroundMask5",
    "content6",
    "headline6",
    "description7"
  ],
  button: ["button"],
  features12: [
    "features12",
    "features12Background",
    "sectionHeading",
    "sectionTitle",
    "description",
    "container",
    "row01",
    "featureItem",
    "featureItemBackground",
    "baseFeatureIcon",
    "content",
    "headline",
    "description2",
    "featureItem2",
    "featureItemBackground2",
    "baseFeatureIcon2",
    "baseFeatureIconBackgroundMask",
    "content2",
    "headline2",
    "description3",
    "featureItem3",
    "featureItemBackground3",
    "baseFeatureIcon3",
    "baseFeatureIconBackgroundMask2",
    "content3",
    "headline3",
    "description4",
    "row02",
    "featureItem4",
    "featureItemBackground4",
    "baseFeatureIcon4",
    "baseFeatureIconBackgroundMask3",
    "content4",
    "headline4",
    "description5",
    "featureItem5",
    "featureItemBackground5",
    "baseFeatureIcon5",
    "baseFeatureIconBackgroundMask4",
    "content5",
    "headline5",
    "description6",
    "featureItem6",
    "featureItemBackground6",
    "baseFeatureIcon6",
    "baseFeatureIconBackgroundMask5",
    "content6",
    "headline6",
    "description7"
  ],
  features12Background: ["features12Background"],
  sectionHeading: ["sectionHeading", "sectionTitle", "description"],
  sectionTitle: ["sectionTitle"],
  description: ["description"],
  container: [
    "container",
    "row01",
    "featureItem",
    "featureItemBackground",
    "baseFeatureIcon",
    "content",
    "headline",
    "description2",
    "featureItem2",
    "featureItemBackground2",
    "baseFeatureIcon2",
    "baseFeatureIconBackgroundMask",
    "content2",
    "headline2",
    "description3",
    "featureItem3",
    "featureItemBackground3",
    "baseFeatureIcon3",
    "baseFeatureIconBackgroundMask2",
    "content3",
    "headline3",
    "description4",
    "row02",
    "featureItem4",
    "featureItemBackground4",
    "baseFeatureIcon4",
    "baseFeatureIconBackgroundMask3",
    "content4",
    "headline4",
    "description5",
    "featureItem5",
    "featureItemBackground5",
    "baseFeatureIcon5",
    "baseFeatureIconBackgroundMask4",
    "content5",
    "headline5",
    "description6",
    "featureItem6",
    "featureItemBackground6",
    "baseFeatureIcon6",
    "baseFeatureIconBackgroundMask5",
    "content6",
    "headline6",
    "description7"
  ],
  row01: [
    "row01",
    "featureItem",
    "featureItemBackground",
    "baseFeatureIcon",
    "content",
    "headline",
    "description2",
    "featureItem2",
    "featureItemBackground2",
    "baseFeatureIcon2",
    "baseFeatureIconBackgroundMask",
    "content2",
    "headline2",
    "description3",
    "featureItem3",
    "featureItemBackground3",
    "baseFeatureIcon3",
    "baseFeatureIconBackgroundMask2",
    "content3",
    "headline3",
    "description4"
  ],
  featureItem: [
    "featureItem",
    "featureItemBackground",
    "baseFeatureIcon",
    "content",
    "headline",
    "description2"
  ],
  featureItemBackground: ["featureItemBackground"],
  baseFeatureIcon: ["baseFeatureIcon"],
  content: ["content", "headline", "description2"],
  headline: ["headline"],
  description2: ["description2"],
  featureItem2: [
    "featureItem2",
    "featureItemBackground2",
    "baseFeatureIcon2",
    "baseFeatureIconBackgroundMask",
    "content2",
    "headline2",
    "description3"
  ],
  featureItemBackground2: ["featureItemBackground2"],
  baseFeatureIcon2: ["baseFeatureIcon2", "baseFeatureIconBackgroundMask"],
  baseFeatureIconBackgroundMask: ["baseFeatureIconBackgroundMask"],
  content2: ["content2", "headline2", "description3"],
  headline2: ["headline2"],
  description3: ["description3"],
  featureItem3: [
    "featureItem3",
    "featureItemBackground3",
    "baseFeatureIcon3",
    "baseFeatureIconBackgroundMask2",
    "content3",
    "headline3",
    "description4"
  ],
  featureItemBackground3: ["featureItemBackground3"],
  baseFeatureIcon3: ["baseFeatureIcon3", "baseFeatureIconBackgroundMask2"],
  baseFeatureIconBackgroundMask2: ["baseFeatureIconBackgroundMask2"],
  content3: ["content3", "headline3", "description4"],
  headline3: ["headline3"],
  description4: ["description4"],
  row02: [
    "row02",
    "featureItem4",
    "featureItemBackground4",
    "baseFeatureIcon4",
    "baseFeatureIconBackgroundMask3",
    "content4",
    "headline4",
    "description5",
    "featureItem5",
    "featureItemBackground5",
    "baseFeatureIcon5",
    "baseFeatureIconBackgroundMask4",
    "content5",
    "headline5",
    "description6",
    "featureItem6",
    "featureItemBackground6",
    "baseFeatureIcon6",
    "baseFeatureIconBackgroundMask5",
    "content6",
    "headline6",
    "description7"
  ],
  featureItem4: [
    "featureItem4",
    "featureItemBackground4",
    "baseFeatureIcon4",
    "baseFeatureIconBackgroundMask3",
    "content4",
    "headline4",
    "description5"
  ],
  featureItemBackground4: ["featureItemBackground4"],
  baseFeatureIcon4: ["baseFeatureIcon4", "baseFeatureIconBackgroundMask3"],
  baseFeatureIconBackgroundMask3: ["baseFeatureIconBackgroundMask3"],
  content4: ["content4", "headline4", "description5"],
  headline4: ["headline4"],
  description5: ["description5"],
  featureItem5: [
    "featureItem5",
    "featureItemBackground5",
    "baseFeatureIcon5",
    "baseFeatureIconBackgroundMask4",
    "content5",
    "headline5",
    "description6"
  ],
  featureItemBackground5: ["featureItemBackground5"],
  baseFeatureIcon5: ["baseFeatureIcon5", "baseFeatureIconBackgroundMask4"],
  baseFeatureIconBackgroundMask4: ["baseFeatureIconBackgroundMask4"],
  content5: ["content5", "headline5", "description6"],
  headline5: ["headline5"],
  description6: ["description6"],
  featureItem6: [
    "featureItem6",
    "featureItemBackground6",
    "baseFeatureIcon6",
    "baseFeatureIconBackgroundMask5",
    "content6",
    "headline6",
    "description7"
  ],
  featureItemBackground6: ["featureItemBackground6"],
  baseFeatureIcon6: ["baseFeatureIcon6", "baseFeatureIconBackgroundMask5"],
  baseFeatureIconBackgroundMask5: ["baseFeatureIconBackgroundMask5"],
  content6: ["content6", "headline6", "description7"],
  headline6: ["headline6"],
  description7: ["description7"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  button: "button";
  features12: "div";
  features12Background: "div";
  sectionHeading: "div";
  sectionTitle: "div";
  description: "div";
  container: "div";
  row01: "div";
  featureItem: "div";
  featureItemBackground: "div";
  baseFeatureIcon: "div";
  content: "div";
  headline: "div";
  description2: "div";
  featureItem2: "div";
  featureItemBackground2: "div";
  baseFeatureIcon2: "div";
  baseFeatureIconBackgroundMask: "div";
  content2: "div";
  headline2: "div";
  description3: "div";
  featureItem3: "div";
  featureItemBackground3: "div";
  baseFeatureIcon3: "div";
  baseFeatureIconBackgroundMask2: "div";
  content3: "div";
  headline3: "div";
  description4: "div";
  row02: "div";
  featureItem4: "div";
  featureItemBackground4: "div";
  baseFeatureIcon4: "div";
  baseFeatureIconBackgroundMask3: "div";
  content4: "div";
  headline4: "div";
  description5: "div";
  featureItem5: "div";
  featureItemBackground5: "div";
  baseFeatureIcon5: "div";
  baseFeatureIconBackgroundMask4: "div";
  content5: "div";
  headline5: "div";
  description6: "div";
  featureItem6: "div";
  featureItemBackground6: "div";
  baseFeatureIcon6: "div";
  baseFeatureIconBackgroundMask5: "div";
  content6: "div";
  headline6: "div";
  description7: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    button: makeNodeComponent("button"),
    features12: makeNodeComponent("features12"),
    features12Background: makeNodeComponent("features12Background"),
    sectionHeading: makeNodeComponent("sectionHeading"),
    sectionTitle: makeNodeComponent("sectionTitle"),
    description: makeNodeComponent("description"),
    container: makeNodeComponent("container"),
    row01: makeNodeComponent("row01"),
    featureItem: makeNodeComponent("featureItem"),
    featureItemBackground: makeNodeComponent("featureItemBackground"),
    baseFeatureIcon: makeNodeComponent("baseFeatureIcon"),
    content: makeNodeComponent("content"),
    headline: makeNodeComponent("headline"),
    description2: makeNodeComponent("description2"),
    featureItem2: makeNodeComponent("featureItem2"),
    featureItemBackground2: makeNodeComponent("featureItemBackground2"),
    baseFeatureIcon2: makeNodeComponent("baseFeatureIcon2"),
    baseFeatureIconBackgroundMask: makeNodeComponent(
      "baseFeatureIconBackgroundMask"
    ),
    content2: makeNodeComponent("content2"),
    headline2: makeNodeComponent("headline2"),
    description3: makeNodeComponent("description3"),
    featureItem3: makeNodeComponent("featureItem3"),
    featureItemBackground3: makeNodeComponent("featureItemBackground3"),
    baseFeatureIcon3: makeNodeComponent("baseFeatureIcon3"),
    baseFeatureIconBackgroundMask2: makeNodeComponent(
      "baseFeatureIconBackgroundMask2"
    ),
    content3: makeNodeComponent("content3"),
    headline3: makeNodeComponent("headline3"),
    description4: makeNodeComponent("description4"),
    row02: makeNodeComponent("row02"),
    featureItem4: makeNodeComponent("featureItem4"),
    featureItemBackground4: makeNodeComponent("featureItemBackground4"),
    baseFeatureIcon4: makeNodeComponent("baseFeatureIcon4"),
    baseFeatureIconBackgroundMask3: makeNodeComponent(
      "baseFeatureIconBackgroundMask3"
    ),
    content4: makeNodeComponent("content4"),
    headline4: makeNodeComponent("headline4"),
    description5: makeNodeComponent("description5"),
    featureItem5: makeNodeComponent("featureItem5"),
    featureItemBackground5: makeNodeComponent("featureItemBackground5"),
    baseFeatureIcon5: makeNodeComponent("baseFeatureIcon5"),
    baseFeatureIconBackgroundMask4: makeNodeComponent(
      "baseFeatureIconBackgroundMask4"
    ),
    content5: makeNodeComponent("content5"),
    headline5: makeNodeComponent("headline5"),
    description6: makeNodeComponent("description6"),
    featureItem6: makeNodeComponent("featureItem6"),
    featureItemBackground6: makeNodeComponent("featureItemBackground6"),
    baseFeatureIcon6: makeNodeComponent("baseFeatureIcon6"),
    baseFeatureIconBackgroundMask5: makeNodeComponent(
      "baseFeatureIconBackgroundMask5"
    ),
    content6: makeNodeComponent("content6"),
    headline6: makeNodeComponent("headline6"),
    description7: makeNodeComponent("description7"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
